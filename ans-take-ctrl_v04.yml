---
- name: Ansible - take control over host
#  hosts: iumLab
  hosts: all
#  remote_user: user
  
  vars:
#    ansible_user: "root"
    ssh_args: "-o StrictHostKeyChecking=no"
    ans_gunam: "ans_robot"
    ans_guid: "9999"
#    ident_files_dir:  "/root/ansible/idents"
    pub_key_file: "{{ident_files_dir}}/{{inventory_hostname}}.pub"
    sudoers_d_file: "ans_robot.conf"

  tasks:
  - name: Generate unique key-pair for the host if it doesn't exist yet
    local_action: command /usr/bin/ssh-keygen -q -f "{{ident_files_dir}}/{{inventory_hostname}}" -t rsa -N ''
    args:
      creates: "{{ident_files_dir}}/{{inventory_hostname}}.pub"

  - block:
    - name: create Ansible group on target host
      group: name={{ans_gunam}} state=present gid={{ans_guid}}
      become: true
    - name: create Ansible user on target host
      user: name={{ans_gunam}} state=present uid={{ans_guid}} group={{ans_gunam}}
    - name: enable NOPASS sudo
      copy: src={{sudoers_d_file}} dest=/etc/sudoers.d/ans_robot owner=root group=root mode=0440
    - name: create .ssh directory
      file: path=/home/{{ans_gunam}}/.ssh owner={{ans_gunam}} group={{ans_gunam}} mode=0700 setype=ssh_home_t serole=object_r state=directory
    - name: copy pub key
      copy: src={{pub_key_file}} dest=/home/{{ans_gunam}}/.ssh/authorized_keys owner={{ans_gunam}} group={{ans_gunam}} mode=0644 setype=ssh_home_t serole=object_r
    become: true

#  - name: Deposit public key into Ansible user's authorized keys file on remote host
#    authorized_key: key="{{ident_files_dir}}/{{inventory_hostname}}.pub" user={{ans_gunam}} state=present

